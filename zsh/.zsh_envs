#!/usr/bin/env zsh
# vim: awa:sts=4:ts=4:sw=4:et:cin:fdm=manual:tw=120:ft=zsh

add_dir_to_path() {
    [ -d "$1" ] && export PATH="$1:$PATH"
}

add_dir_to_fpath() {
    if [[ -d "$1" ]] then
        if [[ $FPATH && ${FAPATH-x} ]] then
            FPATH="$FPATH:$1"
        else
            FPATH="$1"
        fi
    fi
}

add_dir_to_pkg_config_path() {
    if [[ -d "$1" ]] then
        if [[ $PKG_CONFIG_PATH && ${PKG_CONFIG_PATH-x} ]] then
            export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$1"
        else
            export PKG_CONFIG_PATH="$1"
        fi
    fi
}

add_dir_to_include_path() {
    if [[ -d "$1" ]] then
        if [[ $CPPFLAGS && ${CPPFLAGS-x} ]] then
            export CPPFLAGS="$CPPFLAGS -isystem$1"
        else
            export CPPFLAGS="-isystem$1"
        fi
    fi
}

add_dir_to_linker_path() {
    if [[ -d "$1" ]] then
        if [[ $LDFLAGS && ${LDFLAGS-x} ]] then
            export LDFLAGS="$LDFLAGS -L$1"
        else
            export LDFLAGS="-L$1"
        fi
    fi
}

# setup history file, size and filesize
export HISTFILE="$HOME/.zsh_history"
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
export HIST_STAMPS="mm.dd.yyyy"

# always have the current directory in the path
export PATH="$PATH:."

# add a number of paths which are the same no matter what platform
add_dir_to_path "/usr/local/bin"
add_dir_to_path "/usr/local/sbin"
add_dir_to_path "$HOME/settings"
add_dir_to_path "$HOME/scripts"
add_dir_to_path "$HOME/.local/bin"
add_dir_to_path "$HOME/.cargo/bin"

# For using a2x for manpage generation
[ -e "/usr/local/etc/xml/catalog" ] && export XML_CATALOG_FILES="/usr/local/etc/xml/catalog"

if [[ "$(uname)" == "Darwin" ]] then
    # Setup JAVA environment variables
    [ -x "/usr/libexec/java_home" ] && export JAVA_HOME=$(/usr/libexec/java_home)

    # Add various fpath directories for ZSH completions
    add_dir_to_fpath "/usr/local/share/zsh/site-functions"           # brew ZSH site functions
    add_dir_to_fpath "/usr/local/opt/curl/share/zsh/site-functions"  # curl ZSH site functions

    # Setup libressl environment variables -- uncomment when needed
    add_dir_to_path "/usr/local/opt/libressl/bin"
    #add_dir_to_include_path "/usr/local/opt/libressl/include"
    #add_dir_to_linker_path "/usr/local/opt/libressl/lib"
    #add_dir_to_pkg_config_path "/usr/local/opt/libressl/lib/pkgconfig"

    # Setup curl environment variables -- uncomment when needed
    add_dir_to_path "/usr/local/opt/curl/bin"
    #add_dir_to_include_path "/usr/local/opt/curl/include"
    #add_dir_to_linker_path "/usr/local/opt/curl/lib"
    #add_dir_to_pkg_config_path "/usr/local/opt/curl/lib/pkgconfig"

    # Setup sqlite3 environment variables -- uncomment when needed
    add_dir_to_path "/usr/local/opt/sqlite/bin"
    #add_dir_to_include_path "/usr/local/opt/sqlite/include"
    #add_dir_to_linker_path "/usr/local/opt/sqlite/lib"
    #add_dir_to_pkg_config_path "/usr/local/opt/sqlite/lib/pkgconfig"

    # Setup LLVM/clang C++ environment variables -- uncomment when needed
    add_dir_to_path "/usr/local/opt/llvm/bin"
    #add_dir_to_include_path "/usr/local/opt/llvm/include"
    #add_dir_to_linker_path "/usr/local/opt/llvm/lib"

    # Add all of the gnu-variant duplicate (newer) versions of binaries
    add_dir_to_path "/usr/local/opt/coreutils/bin"
    add_dir_to_path "/usr/local/opt/unzip/bin"
    add_dir_to_path "/usr/local/opt/coreutils/libexec/gnubin"
    add_dir_to_path "/usr/local/opt/make/libexec/gnubin"
    add_dir_to_path "/usr/local/opt/grep/libexec/gnubin"
    add_dir_to_path "/usr/local/opt/gnu-sed/libexec/gnubin"
    add_dir_to_path "/usr/local/opt/gnu-getopt/bin"

    # Setup ruby binaries before system ruby
    add_dir_to_path "/usr/local/opt/ruby/bin"
    add_dir_to_path "/usr/local/lib/ruby/gems/2.7.0/bin"
    add_dir_to_include_path "/usr/local/opt/ruby/include"
    add_dir_to_linker_path "/usr/local/opt/ruby/lib"
    add_dir_to_pkg_config_path "/usr/local/opt/ruby/lib/pkgconfig"

    add_dir_to_path "/usr/local/opt/tcl-tk/bin"
    add_dir_to_linker_path "/usr/local/opt/tcl-tk/lib"
    add_dir_to_include_path "/usr/local/opt/tcl-tk/include"
    add_dir_to_pkg_config_path "/usr/local/opt/tcl-tk/lib/pkgconfig"

    add_dir_to_pkg_config_path "/usr/local/opt/python/Frameworks/Python.framework/Versions/Current/lib/pkgconfig"
    add_dir_to_pkg_config_path "/usr/local/opt/oniguruma/lib/pkgconfig"

    # add_dir_to_path $HOME/Library/Python/3.7/bin
    #  The above command would be the place where the `macOS system`
    #  `Python3` is added into the PATH environment variable.  But
    #  since we want to allow installation of multiple versions of
    #  Python3 at the same time with only one version active at a
    #  time.  Pyenv has been installed and this module should install
    #  without any issues. At that point python3, python, pip
    #  and pip will all have been installed. The rest of the global
    #  install packages can be installed by running the following:
    # pip install -r $HOME/scripts/requirements.txt

    # Setup the QT library environment variables -- uncomment when needed
    #add_dir_to_include_path "/usr/local/opt/qt5/include"
    #add_dir_to_linker_path "/usr/local/opt/qt5/lib"
    #add_dir_to_pkg_config_path "/usr/local/opt/qt5/lib/pkgconfig"

    # Setup MacVim environment variables
    add_dir_to_path "/Applications/MacVim.app/Contents/bin"

    # Setup the EDITOR so ti can be referenced correctly below
    if [[ $(command -v mvim &>/dev/null) ]] then
        export EDITOR='mvim';
    elif [[ $(command -v vim &>/dev/null) ]] then
        export EDITOR='vim';
    elif [[ $(command -v vi &>/dev/null) ]] then
        export EDITOR='vi';
    else
        export EDITOR='nano';
    fi
elif [[ "$(uname -s)" == "Linux" ]] then
    if [[ -d "/usr/lib/jvm/java-11-openjdk-amd64" ]] then
        # Setup JAVA environment variables
        export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
        add_dir_to_path "$JAVA_HOME/bin"
    fi

    # Add snap bin directory in case zsh isn't picking it up via the standard /etc/profile.d/apps-bin-path.sh
    add_dir_to_path "/snap/bin"

    # Add ruby include, linker and pkg_config_path (I think there must be a better way)
    add_dir_to_path "$HOME/.gem/ruby/2.7.0/bin"
    add_dir_to_include_path "/usr/include/ruby-2.7.0"
    add_dir_to_include_path "/usr/include/x86_64-linux-gnu/ruby-2.7.0"
    add_dir_to_linker_path "/usr/lib/x86_64-linux-gnu/ruby/2.7.0"
    add_dir_to_pkg_config_path "/usr/lib/x86_64-linux-gnu/pkgconfig"
fi


#
# Create the LS_COLORS environment variable using the 'vivid' applilcation
# Oh Ubuntu `apt` will install filetypes.yml to /usr/share/vivid and themees (*.yml) to /usr/share/vivid/themes
# If `cargo install vivid` was used instead these directories where not created
# On Ubuntu: mkdir -p /usr/share/vivid/themes
#            cp $HOME/.cargo/registry/src/github.com-1ecc6299db9ec823/vivid-0.5.0/config/filetypes.yml /usr/share/vivid
#            cp $HOME/.cargo/registry/src/github.com-1ecc6299db9ec823/vivid-0.5.0/themes/*.yml /usr/share/vivid/themes
# On macOS:  mkdir -p /usr/local/share/vivid/themes
#            cp $HOME/.cargo/registry/src/github.com-1ecc6299db9ec823/vivid-0.5.0/config/filetypes.yml /usr/local/share/vivid
#            cp $HOME/.cargo/registry/src/github.com-1ecc6299db9ec823/vivid-0.5.0/themes/*.yml /usr/local/share/vivid/themes
# This enables Ubuntu to work without any configuration. But since macOS is using a different than expected directory,
#  you have to use the `VIVID_DATABASE=/usr/local/share/vivid/filetypes.yml` environment variable. But that doesn't seem
#  to fix every problem either.
# The best solution, until there is clear support on all platforms, is to place the above files in `$HOME/.config/vivid`.
#   The `vivid` code supports the $HOME/.config/vivid directory out-of-the-box, no extra ENV or switches needed.
#   Then it's just a matter of keeping the files updated every time vivid is released.  On all platforms:
#   cp -vi $HOME/.cargo/registry/src/github.com-1ecc6299db9ec823/vivid-0.5.0/config/filetypes.yml $HOME/.config/vivid
#   cp -vi $HOME/.cargo/registry/src/github.com-1ecc6299db9ec823/vivid-0.5.0/themes/*.yml $HOME/.config/vivid/themes
#
command -v vivid &>/dev/null && { export LS_COLORS="$(vivid generate snazzy)"; }

# Set the location for the SCREENRC config file
[ -e "$HOME/.config/screen/.screenrc" ] && export SCREENRC=$HOME/.config/screen/.screenrc

# RipGrep needs to know where its configuration file is located
[ -e "$HOME/.config/ripgrep/.ripgreprc" ] && export RIPGREP_CONFIG_PATH=$HOME/.config/ripgrep/.ripgreprc

# Setup golang environment variables
if [[ -d "/usr/local/go" ]] then
    export GOROOT=/usr/local/go
    [ -z "${GOPATH+x}" ] && export GOPATH="$HOME/go"
    mkdir -p "$GOPATH/bin"
    add_dir_to_path "$GOPATH/bin"
    add_dir_to_path "$GOROOT/bin"
fi

# Add the environment variable which speciifies where the cheat sheet configuration file is located
if [[ -e "$HOME/.config/cht.sh/cht.sh.conf" ]] then
    export CHTSH_CONF="$HOME/.config/cht.sh/cht.sh.conf"
fi

# Ensure that the TCL interpretter can find the expect library
if [[ $TCLLIBPATH && ${TCLLIBPATH-x} ]] then
    export TCLLIBPATH="$TCLLIBPATH /usr/local/lib"
else
    export TCLLIBPATH="/usr/local/lib"
fi

# Make all the paths unique
typeset -xTU PATH path ':'
typeset -TU FPATH fpath ':'
typeset -xTU PKG_CONFIG_PATH pkg_config_path ':'
typeset -xTU CPPFLAGS cppflags ' '
typeset -xTU LDFLAGS ldflags ' '
typeset -xTU TCLLIBPATH tcllibpath ' '

# Initialize the ZSH completion system
autoload -Uz compinit && compinit

# Case insensitive ZSH path-completion
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}{[:upper:][:lower:]}' \
    'm:{[:lower:][:upper:]}={[:upper:][:lower:]}l:|=* r:|=*' \
    'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' \
    'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'

# Partial ZSH completion suggestions
zstyle ':completion:*' list-suffixes
zstyle ':completion:*' expand prefix suffix

# Load ZSH bashcompinit for some old bash completions
autoload bashcompinit && bashcompinit

unfunction add_dir_to_path
unfunction add_dir_to_fpath
unfunction add_dir_to_pkg_config_path
unfunction add_dir_to_include_path
unfunction add_dir_to_linker_path
